
<div class="m-card-head">
            <div class="m-card-controls button-group">
                <button class="m-card-title button button-tertiary button-medium button-icon js-card-title" tabindex="1" @onclick="ToggleMinimize">
                    <span class="icon-account-circle">
                    </span> <span class="button-text">Statistics</span>
                </button>
                <button class="button button-tertiary button-medium button-icon js-card-minimise" tabindex="1" @onclick="ToggleMinimize">
                    <span class="icon-unfold-less js-card-minimise-icon">
                    </span>
                </button>
                <button class="button button-tertiary button-medium button-icon js-card-toggle" @onclick="ToggleEditMode" tabindex="1">
                    <span class="js-card-toggle-icon icon-edit">
                    </span>
                </button>
            </div>
            <div class="m-card-tabs js-card-tabs is-hidden">
                <div class="m-tab-group js-tab-group">
                    <button class="m-tab-arrow button button-medium button-tertiary button-icon js-tab-arrow" data-tab-arrow-options="tabGroup:basics,action:left" tabindex="1">
                        <span class="icon-chevron-left">
                        </span>
                    </button>
                    <div class="m-tab-row js-tab-row">
                        <button class="m-tab-item js-tab-item is-active" data-tab-options="tabGroup:basics,tab:character,target:js-tab-panel-character" tabindex="1">
                            <span class="m-tab-text">Character</span>
                        </button>
                        <button class="m-tab-item js-tab-item" data-tab-options="tabGroup:basics,tab:experience,target:js-tab-panel-experience" tabindex="1">
                            <span class="m-tab-text">EXP</span>
                        </button>
                        <button class="m-tab-item js-tab-item" data-tab-options="tabGroup:basics,tab:classes,target:js-tab-panel-classes" tabindex="1">
                            <span class="m-tab-text">Classes</span>
                        </button>
                        <button class="m-tab-item js-tab-item" data-tab-options="tabGroup:basics,tab:senses,target:js-tab-panel-senses" tabindex="1">
                            <span class="m-tab-text">Senses</span>
                        </button>
                        <button class="m-tab-item js-tab-item" data-tab-options="tabGroup:basics,tab:initiative,target:js-tab-panel-initiative" tabindex="1">
                            <span class="m-tab-text">Initiative</span>
                        </button>
                        <button class="m-tab-item js-tab-item" data-tab-options="tabGroup:basics,tab:speed,target:js-tab-panel-speed" tabindex="1">
                            <span class="m-tab-text">Speed</span>
                        </button>
                        <button class="m-tab-item js-tab-item" data-tab-options="tabGroup:basics,tab:image,target:js-tab-panel-character-image" tabindex="1">
                            <span class="m-tab-text">Image</span>
                        </button>
                        <span class="m-tab-indicator" style="width:122px;left:5px;">
                        </span>
                    </div>
                    <button class="m-tab-arrow button button-medium button-tertiary button-icon js-tab-arrow" data-tab-arrow-options="tabGroup:basics,action:right" tabindex="1">
                        <span class="icon-chevron-right">
                        </span>
                    </button>
                </div>
            </div>
        </div>
@code {
    
    [Parameter]
    public bool Edit { get; set; }
    [Parameter]
    public EventCallback<bool> EditChanged { get; set; }

    [Parameter]
    public int CharacterSlot { get; set; }

    [Parameter]
    public bool Minimized { get; set; }
    [Parameter]
    public EventCallback<bool> MinimizedChanged { get; set; }
    //public string Hidden => Minimized ? "hidden-lg" : "";
    public void ToggleEditMode()
    {
        Edit = !Edit;
        EditChanged.InvokeAsync(Edit);
    }

    //public void ToggleMinimize() => Minimized = !Minimized; 
    private void ToggleMinimize()
    {
        Minimized = !Minimized;
        MinimizedChanged.InvokeAsync(Minimized);
    }

}